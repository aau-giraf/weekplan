name: tests

on:
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]  # Only trigger on these types
  workflow_dispatch:  # Allows manual triggering of the workflow
concurrency:
  group: ${{ github.sha }}
  cancel-in-progress: true

permissions:
  contents: write
  statuses: write
  actions: write

jobs:
  prettier:
    runs-on: ubuntu-latest
    outputs:
      commit_sha: ${{ steps.get-commit-sha.outputs.commit_sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Set Git configuration
        run: |
          git config --global user.name "TBjerregaard"
          git config --global user.email "tbjerr22@student.aau.dk"

      - name: Prettify code
        uses: creyD/prettier_action@v4.3
        with:
          github_token: ${{ secrets.GIRAF_PAT }}
          prettier_options: --write '**/*.{js,jsx,ts,tsx}'

      - name: Get Commit SHA
        id: get-commit-sha
        run: echo "commit_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Squash and recreate commit
        run: |
          git reset --soft HEAD~1  # Undo the last commit (prettified)
          git add .
          git commit --author="TBjerregaard <tbjerr22@student.aau.dk>" -m "Prettified code"
          git push --force origin ${{ github.head_ref }}
  
  tests:
    needs: prettier  # Ensure tests only run after prettier job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code from Prettier
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.prettier.outputs.commit_sha }}

      - name: Wait for changes to register
        run: sleep 5  # Optional, gives GitHub time to process the commit

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Build Application
        run: npm run build --if-present

      - name: Run Tests
        run: npm run test-ci

      - name: Check for new commits
        id: check-new-commits
        run: |
          latest_commit=$(git rev-parse HEAD)
          echo "latest_commit=$latest_commit" >> $GITHUB_ENV
          echo "Previous commit was: ${{ needs.prettier.outputs.commit_sha }}"

      - name: Trigger rerun if a new commit is found
        if: ${{ env.latest_commit != needs.prettier.outputs.commit_sha }}
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GIRAF_PAT }}" \
            -d '{"ref":"${{ github.head_ref }}"}' \
            "https://api.github.com/repos/TBjerregaard/weekplan/actions/workflows/tests.yml/dispatches"
