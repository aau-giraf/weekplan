name: tests

on:
  pull_request:
    branches: [master]
  workflow_dispatch:

permissions:
  contents: write
  statuses: write

jobs:
  prettier:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Prettify code
        uses: creyD/prettier_action@v4.3
        with:
          token: ${{ secrets.GIRAF_PAT }}
          prettier_options: --write '**/*.{js,jsx,ts,tsx}'

      - name: Commit Prettier changes
        run: |
          git config --global user.name "TBjerregaard"
          git config --global user.email "tbjerr22@student.aau.dk"
          git add .
          git commit -m "Prettified Code" || echo "No changes to commit"
          git push origin ${{ github.head_ref }}
        env:
          token: ${{ secrets.GIRAF_PAT }}

      - name: Update Prettier Status
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { context } = require('@actions/github');
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: 'success',
              description: 'Prettier formatting completed',
              context: 'prettier-status'
            });

  tests:
    needs: prettier
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - run: npm ci
      - run: npm run test-ci

      - name: Update Tests Status
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { context } = require('@actions/github');
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: 'success',
              description: 'Tests completed successfully',
              context: 'tests-status'
            });
